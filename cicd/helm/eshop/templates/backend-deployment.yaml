apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eshop.fullname" . }}-backend
  namespace: {{ include "eshop.fullname" . }}
  labels:
    {{- include "eshop.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "eshop.labels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "eshop.labels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.backend.service.port }}
          protocol: TCP
        env:
        - name: NODE_ENV
          value: {{ .Values.backend.env.NODE_ENV | quote }}
        - name: PORT
          value: {{ .Values.backend.env.PORT | quote }}
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "eshop.fullname" . }}-secrets
              key: jwt-secret
        - name: DB_HOST
          value: {{ .Values.backend.env.DB_HOST | quote }}
        - name: DB_PORT
          value: {{ .Values.backend.env.DB_PORT | quote }}
        - name: DB_NAME
          value: {{ .Values.backend.env.DB_NAME | quote }}
        - name: DB_USER
          value: {{ .Values.backend.env.DB_USER | quote }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "eshop.fullname" . }}-secrets
              key: db-password
        - name: REDIS_HOST
          value: {{ .Values.backend.env.REDIS_HOST | quote }}
        - name: REDIS_PORT
          value: {{ .Values.backend.env.REDIS_PORT | quote }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "eshop.fullname" . }}-secrets
              key: redis-password
        - name: FRONTEND_URL
          value: {{ .Values.backend.env.FRONTEND_URL | quote }}
        {{- if .Values.backend.env.SENTRY_DSN }}
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: {{ include "eshop.fullname" . }}-secrets
              key: sentry-dsn
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /api/monitoring/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/monitoring/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/monitoring/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: uploads
        {{- if .Values.backend.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "eshop.fullname" . }}-backend-uploads
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: logs
        {{- if .Values.backend.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "eshop.fullname" . }}-backend-logs
        {{- else }}
        emptyDir: {}
        {{- end }} 