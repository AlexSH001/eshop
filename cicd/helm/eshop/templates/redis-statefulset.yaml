{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "eshop.fullname" . }}-redis
  namespace: {{ include "eshop.fullname" . }}
  labels:
    {{- include "eshop.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  serviceName: {{ include "eshop.fullname" . }}-redis
  replicas: 1
  selector:
    matchLabels:
      {{- include "eshop.labels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "eshop.labels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - name: redis
          containerPort: {{ .Values.redis.service.port }}
          protocol: TCP
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - yes
        - --maxmemory
        - 512mb
        - --maxmemory-policy
        - allkeys-lru
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "eshop.fullname" . }}-secrets
              key: redis-password
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.redis.persistence.enabled }}
      resources:
        requests:
          storage: {{ .Values.redis.persistence.size }}
      {{- end }}
      {{- if .Values.redis.persistence.storageClass }}
      storageClassName: {{ .Values.redis.persistence.storageClass }}
      {{- end }}
{{- end }} 